AWSTemplateFormatVersion: '2010-09-09'
Description: Template to create an IAM role for Cribl Cloud Search and Stream to access an existing CloudTrail S3 bucket
Parameters:
  CloudTrailS3:
    Description: Existing AWS S3 bucket name for CloudTrail Logs. You can use the aws cli command 'aws_cli % aws cloudtrail describe-trails | grep LogDestination' and select the S3 bucket. 
    Type: String
    Default: ''
  CTSQS:
    Description: Name of the Amazon SQS queue for CloudTrail to trigger for S3 log retrieval.
    Type: String
    Default: cribl-cloudtrail-sqs
  CriblCloudAccountID:
    Description: Cribl Cloud Trust AWS Account ID. Navigate to Cribl.Cloud, go to Workspace and click on Access. Find the Trust and copy the AWS Account ID found in the trust ARN.
    Type: String
    Default: '012345678910'
  KMSKeyArn:
    Description: >
      (Optional) ARN of the AWS KMS key used to encrypt CloudTrail logs in S3.
      You can find your KMS Key Arn from the CloudTrail console in the Logging Account under Trails section and click on the trail name.
    Type: String
    Default: ''

Conditions:
  HasKMSKey: !Not [ !Equals [ !Ref KMSKeyArn, '' ] ]
Resources:
  CriblCTQueue:
    Type: 'AWS::SQS::Queue'
    Properties:
      QueueName: !Ref CTSQS
  CriblCTQueuePolicy:
    Type: 'AWS::SQS::QueuePolicy'
    Properties:
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal: 
              Service: s3.amazonaws.com
            Action:
              - SQS:SendMessage
            Resource: !GetAtt CriblCTQueue.Arn
            Condition:
              StringEquals:
                'aws:SourceAccount':
                  - !Ref AWS::AccountId
      Queues:
        - !Ref CTSQS
        
  # This is an inline configuration for the S3 bucket notification
  # It will be applied to the existing bucket
  CloudTrailBucketNotificationConfig:
    Type: Custom::S3BucketNotification
    DependsOn: 
      - CriblCTQueuePolicy
    Properties:
      ServiceToken: !GetAtt S3NotificationFunction.Arn
      BucketName: !Ref CloudTrailS3
      NotificationConfiguration:
        QueueConfigurations:
          - Events:
              - 's3:ObjectCreated:Put'
            QueueArn: !GetAtt CriblCTQueue.Arn

  # Lambda function to handle S3 bucket notification configuration
  S3NotificationFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: python3.9
      Timeout: 300
      Code:
        ZipFile: |
          import boto3
          import cfnresponse
          import traceback
          
          def handler(event, context):
              s3 = boto3.client('s3')
              try:
                  if event['RequestType'] in ['Create', 'Update']:
                      bucket_name = event['ResourceProperties']['BucketName']
                      notification_config = event['ResourceProperties']['NotificationConfiguration']
                      s3.put_bucket_notification_configuration(
                          Bucket=bucket_name,
                          NotificationConfiguration=notification_config
                      )
                  cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
              except Exception as e:
                  print(str(e))
                  traceback.print_exc()
                  cfnresponse.send(event, context, cfnresponse.FAILED, {})

  # IAM role for the Lambda function
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        - PolicyName: S3NotificationPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:PutBucketNotification'
                Resource: !Sub 'arn:aws:s3:::${CloudTrailS3}'

  # Note: The AWS KMS kKey policy should be updated in the AWS Account that manages your KMS Key that was used to encrypt your CloudTrail data to include the following statements:
  # {
  #   "Sid": "Allow Cribl IAM role to decrypt",
  #   "Effect": "Allow",
  #   "Principal": {
  #     "AWS": "[CriblTrustCloud.Arn]"
  #   },
  #   "Action": [
  #     "kms:Decrypt",
  #     "kms:DescribeKey"
  #   ],
  #   "Resource": "*"
  # },
  # {
  #   "Sid": "Allow S3 to use the key",
  #   "Effect": "Allow",
  #   "Principal": {
  #     "Service": "s3.amazonaws.com"
  #   },
  #   "Action": [
  #     "kms:GenerateDataKey",
  #     "kms:Decrypt"
  #   ],
  #   "Resource": "*",
  #   "Condition": {
  #     "StringEquals": {
  #       "aws:SourceAccount": "[Logging-Account-ID]"
  #     },
  #     "ArnLike": {
  #       "aws:SourceArn": "arn:aws:s3:::[CloudTrail-S3-Bucket-Name]"
  #     }
  #   }
  # }

  CriblTrustCloud:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: 
                - !Sub 'arn:aws:iam::${CriblCloudAccountID}:role/search-exec-main'
                - !Sub 'arn:aws:iam::${CriblCloudAccountID}:role/main-default'
            Action: 
                - 'sts:AssumeRole'
                - 'sts:TagSession'
                - 'sts:SetSourceIdentity'
            Condition:
              StringEquals:
                'sts:ExternalId': !Select 
                  - 4
                  - !Split 
                    - '-'
                    - !Select 
                      - 2
                      - !Split 
                        - '/'
                        - !Ref 'AWS::StackId'
      Description: Role to provide access AWS resources from Cribl Cloud Trust
      Policies:
        - PolicyName: S3EmbeddedInlinePolicy
          PolicyDocument: 
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 
                  - 's3:ListBucket'
                  - 's3:GetObject'
                  - 's3:PutObject'
                  - 's3:GetBucketLocation'
                Resource:
                  - !Sub "arn:aws:s3:::${CloudTrailS3}"
                  - !Sub "arn:aws:s3:::${CloudTrailS3}/*"
              - !If
                - HasKMSKey
                - Effect: Allow
                  Action:
                    - 'kms:Decrypt'
                    - 'kms:DescribeKey'
                  Resource: !Ref KMSKeyArn
                - !Ref 'AWS::NoValue'
              - Effect: Allow
                Action: 
                  - sqs:ReceiveMessage
                  - sqs:DeleteMessage
                  - sqs:ChangeMessageVisibility
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                Resource: 
                  - !GetAtt CriblCTQueue.Arn
Outputs:
  CloudTrailS3:
    Description: CloudTrail S3 bucket
    Value: !Ref CloudTrailS3
  CTSQS:
    Description: SQS Queue for CloudTrail Logs
    Value: !GetAtt CriblCTQueue.Arn
  RoleName:
    Description: Name of created IAM Role
    Value: !Ref CriblTrustCloud
  RoleArn:
    Description: Arn of created Role
    Value: !GetAtt CriblTrustCloud.Arn
  ExternalId:
    Description: External Id for authentication
    Value: !Select 
      - 4
      - !Split 
        - '-'
        - !Select 
          - 2
          - !Split 
            - '/'
            - !Ref 'AWS::StackId'