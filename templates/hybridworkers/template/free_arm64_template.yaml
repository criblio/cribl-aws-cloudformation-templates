AWSTemplateFormatVersion: "2010-09-09"
Transform: "AWS::Serverless-2016-10-31"
Description: Cribl Stream Hybrid Worker Deployment (arm64)

Parameters:
  criblCloudLeader:
    Description: "REQUIRED: Cribl.Cloud or self-hosted Leader node name. Please do not include https:// in the hostname. " 
    Type: String
  criblclusterAuthToken:
    Description: "REQUIRED: Token from Cribl.Cloud or self-hosted Leader node."
    Type: String
    NoEcho: True
  workerGroup:
    Description: "Cribl Stream Hybrid Worker Group. It is set to defaultHybrid unless you change it." 
    Type: String
    Default: defaultHybrid
  workerCount:
    Description: "REQUIRED: Enter the number of worker nodes desired"
    Type: String
  vpcId:
    Description: "REQUIRED: ID of your existing VPC."
    Type: AWS::EC2::VPC::Id
  subnetIds:
    Description: "REQUIRED: Select 2 subnet Ids in different AZs. These subnets must be in the same VPC as VPC ID above."
    Type: List<AWS::EC2::Subnet::Id>
  ImageId:
    Description: "REQUIRED: Name of the AMI for the EC2 Instance being used for your Cribl Deployment."
    Type: AWS::EC2::Image::Id
  workerInstanceType:
    Description: EC2 instance type to provision the Stream worker instance. If none specified, c6g.xlarge will be used.
    Type: String
    Default: c6g.xlarge
    AllowedValues:
        - t4g.nano
        - t4g.micro
        - t4g.small
        - t4g.medium
        - t4g.large
        - t4g.xlarge
        - t4g.2xlarge
        - m6g.medium
        - m6g.large
        - m6g.xlarge
        - m6g.2xlarge
        - m6g.4xlarge
        - m6gd.medium
        - m6gd.large
        - m6gd.xlarge
        - m6gd.2xlarge
        - m6gd.4xlarge
        - m7g.medium
        - m7g.large
        - m7g.xlarge
        - m7g.2xlarge
        - m7g.4xlarge
        - m7gd.medium
        - m7gd.large
        - m7gd.xlarge
        - m7gd.2xlarge
        - m7gd.4xlarge
        - m8g.medium
        - m8g.large
        - m8g.xlarge
        - m8g.2xlarge
        - m8g.4xlarge
        - c6g.medium
        - c6g.large
        - c6g.xlarge
        - c6g.2xlarge
        - c6g.4xlarge
        - c6gd.medium
        - c6gd.large
        - c6gd.xlarge
        - c6gd.2xlarge
        - c6gd.4xlarge
        - c6gn.medium
        - c6gn.large
        - c6gn.xlarge
        - c6gn.2xlarge
        - c6gn.4xlarge
        - c7g.medium
        - c7g.large
        - c7g.xlarge
        - c7g.2xlarge
        - c7g.4xlarge
        - c7gd.medium
        - c7gd.large
        - c7gd.xlarge
        - c7gd.2xlarge
        - c7gd.4xlarge
        - c7gn.medium
        - c7gn.large
        - c7gn.xlarge
        - c7gn.2xlarge
        - c7gn.4xlarge
        - c8g.medium
        - c8g.large
        - c8g.xlarge
        - c8g.2xlarge
        - c8g.4xlarge
    ConstraintDescription: Must contain valid instance type
  AdditionalPolicies:
    Default: "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore,arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy"
    Description: A comma separated list of Policy ARNs to add to the IAM role used by Stream instances. Append to defaults, DO NOT REMOVE!
    Type: CommaDelimitedList    

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Cribl Stream Cloud Information
        Parameters:
          - criblCloudLeader
          - criblclusterAuthToken
          - workerGroup
      - Label:
          default: Worker Instance Configuration
        Parameters:
          - workerInstanceType
          - workerCount
      - Label:
          default: Network Configuration
        Parameters:
          - vpcId
          - subnetIds
      - Label:
          default: Advanced Settings
        Parameters:
          - AdditionalPolicies
    ParameterLabels:
      criblCloudLeader:
        default: Cribl Stream Cloud Leader node hostname
      criblclusterAuthToken:
        default: Cribl Stream Cloud authentication key 
      workerGroup:
        default: Cribl Stream Hybrid Worker node group name
      workerInstanceType:
        default: Worker Nodes EC2 Instance Type
      workerCount:
        default: Worker Count
      vpcId:
        default: VPC ID
      subnetIds:
        default: Subnet IDs
      AdditionalPolicies:
        default: IAM Policies for node instance profiles

Rules:
  SubnetsInVPC:
    Assertions:
      - Assert: !EachMemberIn
          - !ValueOfAll
            - AWS::EC2::Subnet::Id
            - VpcId
          - !RefAll "AWS::EC2::VPC::Id"
        AssertDescription: All subnets must in the VPC

Resources:
  NetworkLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Type: network
      Scheme: internet-facing
      Subnets: !Ref subnetIds
      Tags:
        - Key: Name
          Value: Cribl Stream NLB

  NLBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckProtocol: TCP
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      Port: 9514 
      Protocol: TCP
      TargetType: instance
      VpcId: !Ref vpcId
      Tags:
        - Key: Name
          Value: Cribl Stream NLB Target Group

  NLBListener4200:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref NLBTargetGroup
      LoadBalancerArn: !Ref NetworkLoadBalancer
      Port: 4200
      Protocol: TCP

  NLBListener9514:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref NLBTargetGroup
      LoadBalancerArn: !Ref NetworkLoadBalancer
      Port: 9514
      Protocol: TCP

  NLBListener8088:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref NLBTargetGroup
      LoadBalancerArn: !Ref NetworkLoadBalancer
      Port: 8088
      Protocol: TCP

  NLBListener10300:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref NLBTargetGroup
      LoadBalancerArn: !Ref NetworkLoadBalancer
      Port: 10300
      Protocol: TCP

  ec2WorkerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Cribl Stream Access
      VpcId: !Ref vpcId
      SecurityGroupEgress:
        - IpProtocol: "-1"
          CidrIp: 0.0.0.0/0
          Description: Egress access
      SecurityGroupIngress:
        - IpProtocol: tcp 
          FromPort: 4200
          ToPort: 4200
          CidrIp: 0.0.0.0/0
          Description: Cribl Leader access
        - IpProtocol: tcp
          FromPort: 20000
          ToPort: 20010
          CidrIp: 0.0.0.0/0
          Description: Additional TCP Sources
        - IpProtocol: tcp
          FromPort: 9514
          ToPort: 9514
          CidrIp: 0.0.0.0/0
          Description: Syslog Ingress
        - IpProtocol: tcp
          FromPort: 8088
          ToPort: 8088
          CidrIp: 0.0.0.0/0
          Description: HEC Sources
        - IpProtocol: tcp
          FromPort: 10300
          ToPort: 10300
          CidrIp: 0.0.0.0/0
          Description: Windows and Linux Ingress 
  s3DefaultDestinationBucket:
    Type: AWS::S3::Bucket
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: Name
          Value: Cribl Stream default destination bucket
  StreamRole:
    Type: AWS::IAM::Role
    Properties:
      Path: !Sub "/stream/${AWS::StackName}/"
      Description: Cribl Stream  IAM role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns: !Ref AdditionalPolicies
        
      Policies:
        - PolicyName: S3Destinations
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                  - s3:GetBucketLocation
                Resource:
                  - !Sub ${s3DefaultDestinationBucket.Arn}
                  - !Sub ${s3DefaultDestinationBucket.Arn}/*
        - PolicyName: S3Sources
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetBucketLocation
                Resource:
                  - !Sub ${s3DefaultDestinationBucket.Arn}
                  - !Sub ${s3DefaultDestinationBucket.Arn}/*
        - PolicyName: KinesisSources
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - kinesis:GetRecords
                  - kinesis:GetShardIterator
                  - kinesis:ListShards
                NotResource: "*"
        - PolicyName: SecretsManagerRead
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                Resource: 
                  - !Ref clusterAuthToken
      Tags:
        - Key: Name
          Value: Cribl Stream default IAM role

  StreamInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: !Sub "/stream/${AWS::StackName}/"
      Roles:
        - !Ref StreamRole

  clusterAuthToken:
    Type: 'AWS::SecretsManager::Secret'
    Properties:
      Description: "Cribl Stream Cluster Auth Token"
      SecretString: !Ref criblclusterAuthToken

  ec2WorkersAutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      DesiredCapacity: !Ref workerCount
      MaxSize: !Ref workerCount
      MinSize: !Ref workerCount
      HealthCheckType: EC2
      LaunchTemplate:
        LaunchTemplateId: !Ref ec2WorkerslaunchTemplate
        Version: !GetAtt ec2WorkerslaunchTemplate.LatestVersionNumber
      VPCZoneIdentifier:
        - !Select [0, !Ref subnetIds]
        - !Select [1, !Ref subnetIds]
      TargetGroupARNs:
        - !Ref NLBTargetGroup
      Tags:
        - Key: Name
          Value: Cribl Stream Hybrid Worker Nodes ASG
          PropagateAtLaunch: false

  ec2WorkersAutoScalingGroupLifecycleHook:
    Type: AWS::AutoScaling::LifecycleHook
    Properties:
      AutoScalingGroupName: !Ref ec2WorkersAutoScalingGroup
      DefaultResult: ABANDON
      HeartbeatTimeout: 3600
      LifecycleHookName: cribl-stream-worker-shutdown
      LifecycleTransition: "autoscaling:EC2_INSTANCE_TERMINATING"

  ec2WorkerslaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        InstanceInitiatedShutdownBehavior: terminate
        ImageId: !Ref ImageId
        InstanceType: !Ref workerInstanceType
        IamInstanceProfile:
          Arn: !GetAtt StreamInstanceProfile.Arn
        SecurityGroupIds:
          - !Ref ec2WorkerSecurityGroup
        UserData: !Base64
          Fn::Sub:
            - |
              #cloud-config

              runcmd:
                - export AWS_DEFAULT_REGION=${Region}
                - /usr/local/bin/configure_stream.sh -m worker -u ${clusterAuthToken} -H ${ec2leaderInstanceIp} -g ${workerGroup}
                - reboot
                
            - ec2leaderInstanceIp: !Ref criblCloudLeader
              clusterAuthToken: !Ref clusterAuthToken
              Region: !Ref AWS::Region
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: Cribl Stream Hybrid Worker Instance

  functionWorkerShutdown:
    Type: AWS::Serverless::Function
    Properties:
      Description: Cribl Stream Hybrid Worker Shutdown
      CodeUri: s3://cribl-quick-launch/scripts/index.zip
      Handler: index.handler
      Runtime: python3.12
      Timeout: 600
      Environment:
        Variables:
          SSM_DOCUMENT_NAME: AWS-RunShellScript
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "ssm:SendCommand"
              Resource: !Sub "arn:${AWS::Partition}:ssm:${AWS::Region}::document/AWS-RunShellScript"
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "ssm:GetCommandInvocation"
              Resource: "*"
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "autoscaling:DescribeAutoScalingGroups"
                - "autoscaling:CompleteLifecycleAction"
              Resource: "*"
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - "secretsmanager:GetSecretValue"
              Resource: !Ref clusterAuthToken
      Events:
        WorkerShutdownEvent:
          Type: CloudWatchEvent
          Properties:
            Pattern:
              source:
                - "aws.autoscaling"
              detail-type:
                - "EC2 Instance-terminate Lifecycle Action"
              detail:
                AutoScalingGroupName:
                  - !Ref ec2WorkersAutoScalingGroup
Outputs:
  StreamWebUrlPublic:
    Value: !Sub https://cribl.cloud
    Description: Cribl Cloud Stream Login
  stackName:
    Value: !Sub "${AWS::StackName}"
    Description: CFN Stack Name
  NetworkLoadBalancerDNS:
    Description: DNS name of the Network Load Balancer
    Value: !GetAtt NetworkLoadBalancer.DNSName